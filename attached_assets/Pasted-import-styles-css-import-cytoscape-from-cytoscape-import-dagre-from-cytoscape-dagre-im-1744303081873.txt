import "./styles.css";
import cytoscape from "cytoscape";
import dagre from "cytoscape-dagre";
import "cytoscape-context-menus/cytoscape-context-menus.css";
import "cytoscape-navigator/cytoscape.js-navigator.css";
import data from "./data2";

var nodeHtmlLabel = require("cytoscape-node-html-label");
var contextMenus = require("cytoscape-context-menus");

cytoscape.use(dagre);
if (typeof cytoscape("core", "contextMenus") === "undefined") {
  contextMenus(cytoscape);
}

if (typeof cytoscape("core", "nodeHtmlLabel") === "undefined") {
  nodeHtmlLabel(cytoscape);
}

var options = {
  evtType: ["cxttap", "tap"],
  menuItems: [
    {
      id: "details",
      content: "View Details...",
      tooltipText: "View Details",
      selector: "node",
      onClickFunction: function (event) {},
      hasTrailingDivider: true
    },
    {
      id: "generateReport",
      content: "Generate Report",
      selector: "node",
      onClickFunction: function (event) {},
      hasTrailingDivider: true
    }
  ],
  menuItemClasses: ["custom-menu-item", "custom-menu-item:hover"],
  contextMenuClasses: ["custom-context-menu"]
};

var cy = cytoscape({
  container: document.getElementById("cy"),

  ready: function () {
    var instance = this.contextMenus(options);
  },

  style: [
    //CORE
    {
      selector: "core",
      css: {
        "active-bg-size": 0 //The size of the active background indicator.
      }
    },

    //NODE
    {
      selector: "node",
      css: {
        width: "38px",
        height: "38px",
        "font-family": "Nokia Pure Regular",
        "background-opacity": "1"
      }
    },
    //GROUP

    //EDGE
    {
      selector: "edge",
      css: {
        width: 1,
        "line-color": "#b8b8b8",
        "curve-style": "bezier",
        "target-arrow-color": "#ccc",
        "target-arrow-shape": "triangle",
        //LABEL
        label: ""
      }
    }
  ],

  layout: {
    name: "dagre",
    padding: 10,
    spacingFactor: 1
  },

  elements: data,

  zoomingEnabled: true,
  userZoomingEnabled: true,
  autoungrabify: false
});

//cy.fit();
//NODE EVENTS
cy.on("mouseover", "node", function (e) {
  e.target.addClass("hover");
});
cy.on("mouseout", "node", function (e) {
  e.target.removeClass("hover");
});

cy.on("mousedown", "node", function (e) {
  e.target.addClass("hover");
});
cy.on("click", "node", function (e) {
  console.log("clicked:" + this.data());
});

cy.nodeHtmlLabel([
  {
    query: ".nodeIcon",
    halign: "center",
    valign: "center",
    halignBox: "center",
    valignBox: "center",
    tpl: function (data) {
      return `<div class="element ${data._hidden}">
                <span class="element-severity_badge">
                  <i class="icon icon-${data.alarmSeverity}" /></i>
                </span>
                <span class="element-graphic operationalState-${data.operationalState}">
                  <i class="icon icon-${data.kind}" /></i>
                  <span class="overlay"></span>
                </span>
                <span title="${data.displayName}" class="element-label">${data.displayName}</span>
              </div>`;
    }
  },
  {
    query: ".nodeIcon.hover",
    halign: "center",
    valign: "center",
    halignBox: "center",
    valignBox: "center",
    tpl: function (data) {
      return `<div class="element ${data._hidden}">
                <span class="element-severity_badge">
                  <i class="icon icon-${data.alarmSeverity}" /></i>
                </span>
                <span class="element-graphic hover operationalState-${data.operationalState}">
                  <i class="icon icon-${data.kind} icon-hover" /></i>
                  <span class="overlay"></span>
                </span>
                <span title="${data.displayName}" class="element-label">${data.displayName}</span>
              </div>`;
    }
  },
  {
    query: ".nodeIcon:selected",
    halign: "center",
    valign: "center",
    halignBox: "center",
    valignBox: "center",
    tpl: function (data) {
      return `<div class="element ${data._hidden}">
                <span class="element-severity_badge">
                  <i class="icon icon-${data.alarmSeverity}" /></i>
                </span>
                <span class="element-graphic selected operationalState-${data.operationalState}">
                  <i class="icon icon-${data.kind}" /></i>
                  <span class="overlay"></span>  
                </span>
                <span title="${data.displayName}" class="element-label">${data.displayName}</span>
              </div>`;
    }
  },
  {
    query: ".nodeIcon.hover:selected",
    halign: "center",
    valign: "center",
    halignBox: "center",
    valignBox: "center",
    tpl: function (data) {
      return `<div class="element ${data._hidden}">
                <span class="element-severity_badge">
                  <i class="icon icon-${data.alarmSeverity}" /></i>
                </span>
                <span class="element-graphic hover selected operationalState-${data.operationalState}">
                  <i class="icon icon-${data.kind}" /></i>
                  <span class="overlay"></span>
                </span>
                <span title="${data.displayName}" class="element-label">${data.displayName}</span>
              </div>`;
    }
  }
]);
