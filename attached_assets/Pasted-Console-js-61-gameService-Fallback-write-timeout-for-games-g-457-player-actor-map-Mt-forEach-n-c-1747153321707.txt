Console.js:61 [gameService] Fallback write timeout for games/g_457/player_actor_map
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
(anonymous) @ gameService.ts:79
setTimeout
(anonymous) @ gameService.ts:76
write @ gameService.ts:63
createGame @ gameService.ts:205
await in createGame
handleSubmit @ CreateGameForm.svelte:37
(anonymous) @ CreateGameForm.svelte:64
(anonymous) @ chunk-NXAN6IPG.js?v=5a0d8124:2677
without_reactive_context @ chunk-NXAN6IPG.js?v=5a0d8124:2629
target_handler @ chunk-NXAN6IPG.js?v=5a0d8124:2676
Console.js:61 [gameService] Fallback write timeout for games/g_457/actors_ref
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
(anonymous) @ gameService.ts:79
setTimeout
(anonymous) @ gameService.ts:76
write @ gameService.ts:63
createGame @ gameService.ts:206
await in createGame
handleSubmit @ CreateGameForm.svelte:37
(anonymous) @ CreateGameForm.svelte:64
(anonymous) @ chunk-NXAN6IPG.js?v=5a0d8124:2677
without_reactive_context @ chunk-NXAN6IPG.js?v=5a0d8124:2629
target_handler @ chunk-NXAN6IPG.js?v=5a0d8124:2676
Console.js:61 [gameService] Fallback write timeout for games/g_457/agreements_ref
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
(anonymous) @ gameService.ts:79
setTimeout
(anonymous) @ gameService.ts:76
write @ gameService.ts:63
createGame @ gameService.ts:207
await in createGame
handleSubmit @ CreateGameForm.svelte:37
(anonymous) @ CreateGameForm.svelte:64
(anonymous) @ chunk-NXAN6IPG.js?v=5a0d8124:2677
without_reactive_context @ chunk-NXAN6IPG.js?v=5a0d8124:2629
target_handler @ chunk-NXAN6IPG.js?v=5a0d8124:2676
Console.js:61 [gameService] Fallback write timeout for games/g_457/chat_rooms_ref
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
(anonymous) @ gameService.ts:79
setTimeout
(anonymous) @ gameService.ts:76
write @ gameService.ts:63
createGame @ gameService.ts:208
await in createGame
handleSubmit @ CreateGameForm.svelte:37
(anonymous) @ CreateGameForm.svelte:64
(anonymous) @ chunk-NXAN6IPG.js?v=5a0d8124:2677
without_reactive_context @ chunk-NXAN6IPG.js?v=5a0d8124:2629
target_handler @ chunk-NXAN6IPG.js?v=5a0d8124:2676
Console.js:61 TSS: Counted history being pushed
Console.js:61 TSS: Caught history
Console.js:61 TSS: Checking if repeated 500 times for interval 1000 against data:  {lastTime: 1747153104833, lastCount: 1}
Console.js:61 [GameDetailsPage] Loading context for g_457
Console.js:61 [GameDetailsPage] Subscription updated for g_457
Console.js:61 chain not yet supported for {.: 'player_actor_map', =: undefined, >: 1747153118935.001, #: 'games/g_457'} ... {$: Gun2, put: {…}, VIA: {…}} {$: Gun2, root: {…}, id: 247, back: {…}, on: ƒ, …}
Console.js:61 chain not yet supported for {.: 'players', =: undefined, >: 1747153118935, #: 'games/g_457'} ... {$: Gun2, put: {…}, VIA: {…}} {$: Gun2, root: {…}, id: 247, back: {…}, on: ƒ, …}
Console.js:61 chain not yet supported for {.: 'player_actor_map', =: undefined, >: 1747153118935.001, #: 'games/g_457'} ... {$: Gun2, put: {…}, VIA: {…}} {$: Gun2, root: {…}, id: 247, back: {…}, on: ƒ, …}
Console.js:61 chain not yet supported for {.: 'players', =: undefined, >: 1747153118935, #: 'games/g_457'} ... {$: Gun2, put: {…}, VIA: {…}} {$: Gun2, root: {…}, id: 247, back: {…}, on: ƒ, …}
Console.js:61 [GameDetailsPage] Subscription updated for g_457
Console.js:61 [GameDetailsPage] Cards – total:5, used:0, avail:5
Console.js:61 [GameDetailsPage] Context loaded in 2356.00ms
Console.js:61 ActorSelector props: {gameId: 'g_457', game: Proxy(Object), actors: Proxy(Array), availableCardsForActors: Proxy(Array)}
Console.js:61 [svelte] console_log_stateYour `console.log` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` insteadhttps://svelte.dev/e/console_log_state
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
console_log_state @ chunk-VIZMNZTH.js?v=5a0d8124:28
(anonymous) @ chunk-D7BAK47I.js?v=5a0d8124:3909
untrack @ chunk-NXAN6IPG.js?v=5a0d8124:2041
log_if_contains_state @ chunk-D7BAK47I.js?v=5a0d8124:3896
$effect @ ActorSelector.svelte:49
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
setTimeout
(anonymous) @ gunService.ts:288
getCollection @ gunService.ts:276
getGameContext @ gameService.ts:884
await in getGameContext
$effect @ +page.svelte:65
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
Console.js:61 [snapshot] availableCardsForActors → []length: 0[[Prototype]]: Array(0)
Console.js:61 availableCardsForActors → Proxy(Array) {}
Console.js:61 existingActors → () => {
		const uid = $userStore().user?.user_id;

		if (!uid) return [];
		return actors().filter((a) => $.strict_equals(a.user_ref, uid));
	}
Console.js:61 No existing actors — switching joinMode to "new"
Console.js:61 [svelte] console_log_stateYour `console.log` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` insteadhttps://svelte.dev/e/console_log_state
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
console_log_state @ chunk-VIZMNZTH.js?v=5a0d8124:28
(anonymous) @ chunk-D7BAK47I.js?v=5a0d8124:3909
untrack @ chunk-NXAN6IPG.js?v=5a0d8124:2041
log_if_contains_state @ chunk-D7BAK47I.js?v=5a0d8124:3896
$effect @ ActorSelector.svelte:49
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
setTimeout
$effect @ +page.svelte:93
await in $effect
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
Console.js:61 [snapshot] availableCardsForActors → (5) [{…}, {…}, {…}, {…}, {…}]
Console.js:61 availableCardsForActors → Proxy(Array) {0: {…}, 1: {…}, 2: {…}, 3: {…}, 4: {…}}
Console.js:61 Default selectedCardId → card_1
Console.js:61 [svelte] console_log_stateYour `console.log` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` insteadhttps://svelte.dev/e/console_log_state
Mt.forEach.n.<computed> @ Console.js:61
warn @ client.js?v=5a0d8124:2949
console_log_state @ chunk-VIZMNZTH.js?v=5a0d8124:28
(anonymous) @ chunk-D7BAK47I.js?v=5a0d8124:3909
untrack @ chunk-NXAN6IPG.js?v=5a0d8124:2041
log_if_contains_state @ chunk-D7BAK47I.js?v=5a0d8124:3896
$effect @ ActorSelector.svelte:49
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
setTimeout
$effect @ +page.svelte:93
await in $effect
update_reaction @ chunk-NXAN6IPG.js?v=5a0d8124:1638
update_effect @ chunk-NXAN6IPG.js?v=5a0d8124:1757
flush_queued_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1854
flush_queued_root_effects @ chunk-NXAN6IPG.js?v=5a0d8124:1833
Console.js:61 [snapshot] availableCardsForActors → (5) [{…}, {…}, {…}, {…}, {…}]
Console.js:61 availableCardsForActors → Proxy(Array) {0: {…}, 1: {…}, 2: {…}, 3: {…}, 4: {…}}
