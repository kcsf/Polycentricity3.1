Console.js:61 Getting game: g456
Console.js:61 Game retrieved: g456
Console.js:61 Subscribing to game: g456
Console.js:61 Getting role for user u838 in game g456
Console.js:61 Getting game: g456
Console.js:61 Game retrieved: g456
Console.js:61 No role assigned to user u838 in game g456
Console.js:61 Player role: null
Console.js:61 Found saved actor ID in localStorage: m9h3jiwvvvbrzmlp
Console.js:61 Loading player role with actorId: m9h3jiwvvvbrzmlp
Console.js:61 Getting role for user u838 in game g456 with actorId: m9h3jiwvvvbrzmlp
Console.js:61 Got role using specified actorId for user u838 in game g456
Console.js:61 Found existing player role: {_: {…}, actor_id: 'm9h3jiwvvvbrzmlp', actor_type: 'National Identity', agreements: {…}, card_id: 'card_m9ejeb2dy248tdoi', …}
Console.js:61 Left sidebar is now CLOSED
Console.js:61 Right sidebar is now CLOSED
Console.js:61 CardBoard: Initializing for game g456
Console.js:61 CardBoard: Loading cards for game g456
Console.js:61 Getting available cards for game: g456
Console.js:61 Getting game: g456
Console.js:61 Getting group messages for game g456
Console.js:61 Active actor ID changed to: m9h3jiwvvvbrzmlp
Console.js:61 Game retrieved: g456
Console.js:61 Retrieved 7 group messages for game g456
Console.js:61 Subscribing to group chat for game g456
Console.js:61 Found 4 available cards for game g456
Console.js:61 CardBoard: Loaded 4 cards
Console.js:61 CardBoard: First card: {_: {…}, backstory: 'A wealthy idealist who left corporate life to fund sustainable communities.', capabilities: {…}, card_category: 'Funders', card_id: 'card_m9ej0qxdf0zko4f8', …}
Console.js:61 D3CardBoard: Initializing with gameId: g456
Console.js:61 Cache Utils: All caches cleared
Console.js:61 Cache Utils: Starting cache initialization for game g456
Console.js:61 Getting game: g456
Console.js:61 Game retrieved: g456
Console.js:61 Cache Utils: Cache sizes before initialization - Values: 0, Capabilities: 0
Console.js:61 Cache Utils: Processing card Verdant Weaver
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card DAO of the Green Veil
Console.js:61 Cache Utils: Processing card Luminos Funder
Console.js:61 Cache Utils: No values or capabilities found in database, adding defaults
Console.js:61 Cache Utils: Added 4 default values to cache
Console.js:61 Cache Utils: Added 4 default capabilities to cache
Console.js:61 Cache Utils: Loaded 16 cards in initializeCaches
Console.js:61 Cache Utils: Loaded 4 values
Console.js:61 Cache Utils: Loaded 4 capabilities
Console.js:61 Cache Utils: Loading details for 16 cards in batch mode
Console.js:61 Cache Utils: Preloaded 4 values and 4 capabilities
Console.js:61 DEBUG: Looking for valueNames in card Verdant Weaver. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card c1, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Verdant Weaver. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card c1, returning defaults
Console.js:61 Card Verdant Weaver loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card c2, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card c2, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9eekv16d96s5d4x, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9eekv16d96s5d4x, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9eep6cotx4iq7ws, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9eep6cotx4iq7ws, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9eesmddes3e621m, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9eesmddes3e621m, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9eesohai4cpqjv4, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9eesohai4cpqjv4, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9efgp8ci4ujty40, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9efgp8ci4ujty40, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9efgrcahdp26ddo, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9efgrcahdp26ddo, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9efiixnbs0i8qqr, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9efiixnbs0i8qqr, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9efil1fs8s3l7vt, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9efil1fs8s3l7vt, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9eftm1ymemf6lec, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9eftm1ymemf6lec, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9efto63atwq1kad, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9efto63atwq1kad, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9ej0qxdf0zko4f8, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9ej0qxdf0zko4f8, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9ej244l9ffpdxpc, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9ej244l9ffpdxpc, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9ejfo9k5pf33gtz, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9ejfo9k5pf33gtz, returning defaults
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9ejeb2dy248tdoi, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9ejeb2dy248tdoi, returning defaults
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 Cache Utils: Updated 16 cards with value and capability names
Console.js:61 Cache Utils: Card details cache size: 16
Console.js:61 Cache Utils: Cache initialization completed in 1139ms
Console.js:61 Cache Utils: Cached 16 cards, 0 agreements
Console.js:61 Cache Utils: Value cache: 4 entries
Console.js:61 Cache Utils: Capability cache: 4 entries
Console.js:61 Cache Utils: Actor-to-card map: 0 entries
Console.js:61 Cache Utils: Sample values:
Console.js:61   - Sustainability (value_sustainability)
Console.js:61   - Community Resilience (value_community_resilience)
Console.js:61   - Ecological Balance (value_ecological_balance)
Console.js:61 Cache Utils: Sample capabilities:
Console.js:61   - Communication (capability_communication)
Console.js:61   - Impact Assessment (capability_impact_assessment)
Console.js:61   - Resource Management (capability_resource_management)
Console.js:61 Caches initialized: {values: 4, capabilities: 4}
Console.js:61 Loading details for 4 cards in batch mode
Console.js:61 Using centralized cache utility: loadCardDetails
Console.js:61 Cache Utils: Loading details for 4 cards in batch mode
Console.js:61 Cache Utils: Preloaded 4 values and 4 capabilities
Console.js:61 DEBUG: Looking for valueNames in card Luminos Funder. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 DEBUG: Looking for capabilityNames in card Luminos Funder. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Card Luminos Funder loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card DAO of the Green Veil. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 DEBUG: Looking for capabilityNames in card DAO of the Green Veil. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Card DAO of the Green Veil loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card PMA Seedkeeper. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9epil53g0rtedwh, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card PMA Seedkeeper. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9epil53g0rtedwh, returning defaults
Console.js:61 Card PMA Seedkeeper loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 DEBUG: Looking for valueNames in card Eco-Patron Collective. {hasValues: true, valueType: 'object', valuesObj: {…}}
Console.js:61 Cache miss: No values found in cache for referenced card card_m9epimjtsgubbspn, returning defaults
Console.js:61 DEBUG: Looking for capabilityNames in card Eco-Patron Collective. {hasCapabilities: true, capabilityType: 'object', capabilitiesObj: {…}}
Console.js:61 Cache miss: No capabilities found in cache for referenced card card_m9epimjtsgubbspn, returning defaults
Console.js:61 Card Eco-Patron Collective loaded with: {values: Array(2), capabilities: Array(2)}
Console.js:61 Cache Utils: Updated 4 cards with value and capability names
Console.js:61 Cache Utils: Card details cache size: 18
Console.js:61 Processed cards: (4) [{…}, {…}, {…}, {…}]
Console.js:61 Finished loading all card details using centralized cache utilities
Console.js:61 Cache status updated through centralized cache management
Console.js:61 D3CardBoard: Cards with value and capability names before visualization:
Console.js:61 Card Luminos Funder has: {valueNames: Array(2), valueCount: 2, capabilityNames: Array(2), capabilityCount: 2}
Console.js:61 Card DAO of the Green Veil has: {valueNames: Array(2), valueCount: 2, capabilityNames: Array(2), capabilityCount: 2}
Console.js:61 Card PMA Seedkeeper has: {valueNames: Array(2), valueCount: 2, capabilityNames: Array(2), capabilityCount: 2}
Console.js:61 Card Eco-Patron Collective has: {valueNames: Array(2), valueCount: 2, capabilityNames: Array(2), capabilityCount: 2}
Console.js:61 D3CardBoard: Initializing graph with fully processed cards
Console.js:61 Manually assigned values and capabilities to card Luminos Funder: {values: Array(2), capabilities: Array(2)}
Console.js:61 Manually assigned values and capabilities to card DAO of the Green Veil: {values: Array(2), capabilities: Array(2)}
Console.js:61 Manually assigned values and capabilities to card PMA Seedkeeper: {values: Array(2), capabilities: Array(2)}
Console.js:61 Manually assigned values and capabilities to card Eco-Patron Collective: {values: Array(2), capabilities: Array(2)}
Console.js:61 Using centralized caches at initialization (after manual assignments): {valueCount: 7, capabilityCount: 7}
Console.js:61 Cards before visualization: (4) [{…}, {…}, {…}, {…}]
Console.js:61 Card Luminos Funder values: (2) ['Sustainability', 'Community Resilience'] (2) ['Communication', 'Impact Assessment']
Console.js:61 Card DAO of the Green Veil values: (2) ['Community Resilience', 'Food Security'] (2) ['Impact Assessment', 'Resource Sharing']
Console.js:61 Card PMA Seedkeeper values: (2) ['Food Security', 'Local Economy'] (2) ['Resource Sharing', 'Knowledge Transfer']
Console.js:61 Card Eco-Patron Collective values: (2) ['Local Economy', 'Sustainability'] (2) ['Knowledge Transfer', 'Communication']
Console.js:61 D3 Initialization params: {svgExists: true, cardsCount: 4, agreementsCount: 3, width: 1222.2857666015625, height: 830.4285888671875}
Console.js:61 Initializing D3 graph with data...
Console.js:61 D3 initialization arguments: {svgRefExists: true, cardsWithPositionLength: 4, agreementsLength: 3, width: 1222.2857666015625, height: 830.4285888671875, …}
Console.js:61 CRITICAL: Clearing ALL SVG content in initializeD3Graph at line ~1115
Console.js:61 Node selector debug: {nodeCardCount: 4, nodeActorCount: 4}
Console.js:61 Graph initialized. Received: {hasSimulation: true, hasNodeElements: true, nodeElementsEmpty: true, nodesCount: 7}
Console.js:61 Node elements assigned from graph state
Console.js:61 DEBUG: nodeElements empty: false, count: 7
Console.js:61 DEBUG: Manual node selection empty: false, count: 7
Console.js:61 Adding rings with: {nodes: 7, values: 7, capabilities: 7}
Console.js:61 Using centralized caches (already initialized): {valueCount: 7, capabilityCount: 7, keys: {…}}
Console.js:61 Verifying node data has _valueNames and _capabilityNames:
Console.js:61 Node card_m9ej0qxdf0zko4f8 data: {hasValueNames: false, hasCapabilityNames: false, valueNamesLength: 0, capabilityNamesLength: 0}
Console.js:61 Node card_m9ejfo9k5pf33gtz data: {hasValueNames: false, hasCapabilityNames: false, valueNamesLength: 0, capabilityNamesLength: 0}
Console.js:61 Node card_m9epil53g0rtedwh data: {hasValueNames: false, hasCapabilityNames: false, valueNamesLength: 0, capabilityNamesLength: 0}
Console.js:61 Node card_m9epimjtsgubbspn data: {hasValueNames: false, hasCapabilityNames: false, valueNamesLength: 0, capabilityNamesLength: 0}
Console.js:61 Direct D3 node selection (.node-actor): {isEmpty: false, count: 4}
Console.js:61 CRITICAL: About to call addDonutRings with caches: {valueCount: 7, capabilityCount: 7, nodeElementsCount: 7}
Console.js:61 Node selector debug: {nodeCardCount: 4, nodeActorCount: 4}
Console.js:61 addDonutRings received these cache values: {valueCacheProvided: true, valueCacheSize: 7, capabilityCacheProvided: true, capabilityCacheSize: 7, sampleValueKeys: Array(3), …}
Console.js:61 CRITICAL NODE CHECK: {selectionValid: true, selectionEmpty: false, nodeCount: 7, selection: 7, firstFewNodes: Array(2)}
Console.js:61 D3 nodeElements debug: {size: 7, data: Array(7), types: Array(7)}
Console.js:61 NODE CLASS DEBUG: {nodeElementsClasses: 'node node-card node-actor, node node-card node-act…reement, node node-agreement, node node-agreement', actorNodeCount: 4, agreementNodeCount: 3}
Console.js:61 After class fix, node count: {actorNodeCount: 4}
Console.js:61 Using global selector: Found 4 nodes
Console.js:61 Filtered card nodes debug: {count: 4, data: Array(4)}
Console.js:61 Preparing to add real donut segments to node: card_m9ej0qxdf0zko4f8
Console.js:61 Node card_m9ej0qxdf0zko4f8 has no _valueNames property, attempting to find from card data
Console.js:61 Found 2 value names from card data: (2) ['value_sustainability', 'value_community-resilience']
Console.js:61 Node card_m9ej0qxdf0zko4f8 has no _capabilityNames property, attempting to find from card data
Console.js:61 Found 2 capability names from card data: (2) ['capability_communication', 'capability_impact-assessment']
Console.js:61 Node card_m9ej0qxdf0zko4f8 ready for donut rings with: {hasValueNames: true, hasCapabilityNames: true, valueNames: Array(2), capabilityNames: Array(2)}
Console.js:61 Preparing to add real donut segments to node: card_m9ejfo9k5pf33gtz
Console.js:61 Node card_m9ejfo9k5pf33gtz has no _valueNames property, attempting to find from card data
Console.js:61 Found 2 value names from card data: (2) ['value_community-resilience', 'value_food-security']
Console.js:61 Node card_m9ejfo9k5pf33gtz has no _capabilityNames property, attempting to find from card data
Console.js:61 Found 2 capability names from card data: (2) ['capability_impact-assessment', 'capability_resource-sharing']
Console.js:61 Node card_m9ejfo9k5pf33gtz ready for donut rings with: {hasValueNames: true, hasCapabilityNames: true, valueNames: Array(2), capabilityNames: Array(2)}
Console.js:61 Preparing to add real donut segments to node: card_m9epil53g0rtedwh
Console.js:61 Node card_m9epil53g0rtedwh has no _valueNames property, attempting to find from card data
Console.js:61 Found 2 value names from card data: (2) ['value_food-security', 'value_local-economy']
Console.js:61 Node card_m9epil53g0rtedwh has no _capabilityNames property, attempting to find from card data
Console.js:61 Found 2 capability names from card data: (2) ['capability_resource-sharing', 'capability_knowledge-transfer']
Console.js:61 Node card_m9epil53g0rtedwh ready for donut rings with: {hasValueNames: true, hasCapabilityNames: true, valueNames: Array(2), capabilityNames: Array(2)}
Console.js:61 Preparing to add real donut segments to node: card_m9epimjtsgubbspn
Console.js:61 Node card_m9epimjtsgubbspn has no _valueNames property, attempting to find from card data
Console.js:61 Found 2 value names from card data: (2) ['value_local-economy', 'value_sustainability']
Console.js:61 Node card_m9epimjtsgubbspn has no _capabilityNames property, attempting to find from card data
Console.js:61 Found 2 capability names from card data: (2) ['capability_knowledge-transfer', 'capability_communication']
Console.js:61 Node card_m9epimjtsgubbspn ready for donut rings with: {hasValueNames: true, hasCapabilityNames: true, valueNames: Array(2), capabilityNames: Array(2)}
Console.js:61 Using _valueNames for node card_m9ej0qxdf0zko4f8: (2) ['value_sustainability', 'value_community-resilience']
Console.js:61 Category values for node card_m9ej0qxdf0zko4f8: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: values with items: (2) ['value_sustainability', 'value_community-resilience']
Console.js:61 Wedges added for node: card_m9ej0qxdf0zko4f8 count: 2 SVG path: M0.305,-49.999A50,50,0,0,1,29.142,-40.629L20.325,-28.494A35,35,0,0,0,0.305,-34.999Z
Console.js:61 Wedges added for node: card_m9ej0qxdf0zko4f8 count: 2 SVG path: M29.636,-40.271A50,50,0,0,1,47.458,-15.741L33.191,-11.105A35,35,0,0,0,20.819,-28.135Z
Console.js:61 Using _capabilityNames for node card_m9ej0qxdf0zko4f8: (2) ['capability_communication', 'capability_impact-assessment']
Console.js:61 Category capabilities for node card_m9ej0qxdf0zko4f8: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: capabilities with items: (2) ['capability_communication', 'capability_impact-assessment']
Console.js:61 Wedges added for node: card_m9ej0qxdf0zko4f8 count: 2 SVG path: M47.646,-15.16A50,50,0,0,1,47.646,15.16L33.38,10.525A35,35,0,0,0,33.38,-10.525Z
Console.js:61 Wedges added for node: card_m9ej0qxdf0zko4f8 count: 2 SVG path: M47.458,15.741A50,50,0,0,1,29.636,40.271L20.819,28.135A35,35,0,0,0,33.191,11.105Z
Console.js:61 Category intellectualProperty for node card_m9ej0qxdf0zko4f8: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: intellectualProperty with items: []
Console.js:61 Skipping rendering for empty category intellectualProperty in node card_m9ej0qxdf0zko4f8
Console.js:61 Category resources for node card_m9ej0qxdf0zko4f8: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: resources with items: []
Console.js:61 Skipping rendering for empty category resources in node card_m9ej0qxdf0zko4f8
Console.js:61 Category goals for node card_m9ej0qxdf0zko4f8: {count: 1, items: Array(1), hasData: true}
Console.js:61 Rendering wedges for category: goals with items: ['Fund projects that reduce ecological footprints and promote self-reliance.']
Console.js:61 Wedges added for node: card_m9ej0qxdf0zko4f8 count: 1 SVG path: M29.142,40.629A50,50,0,0,1,-29.142,40.629L-20.325,28.494A35,35,0,0,0,20.325,28.494Z
Console.js:61 Using _valueNames for node card_m9ejfo9k5pf33gtz: (2) ['value_community-resilience', 'value_food-security']
Console.js:61 Category values for node card_m9ejfo9k5pf33gtz: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: values with items: (2) ['value_community-resilience', 'value_food-security']
Console.js:61 Wedges added for node: card_m9ejfo9k5pf33gtz count: 2 SVG path: M0.305,-49.999A50,50,0,0,1,29.142,-40.629L20.325,-28.494A35,35,0,0,0,0.305,-34.999Z
Console.js:61 Wedges added for node: card_m9ejfo9k5pf33gtz count: 2 SVG path: M29.636,-40.271A50,50,0,0,1,47.458,-15.741L33.191,-11.105A35,35,0,0,0,20.819,-28.135Z
Console.js:61 Using _capabilityNames for node card_m9ejfo9k5pf33gtz: (2) ['capability_impact-assessment', 'capability_resource-sharing']
Console.js:61 Category capabilities for node card_m9ejfo9k5pf33gtz: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: capabilities with items: (2) ['capability_impact-assessment', 'capability_resource-sharing']
Console.js:61 Wedges added for node: card_m9ejfo9k5pf33gtz count: 2 SVG path: M47.646,-15.16A50,50,0,0,1,47.646,15.16L33.38,10.525A35,35,0,0,0,33.38,-10.525Z
Console.js:61 Wedges added for node: card_m9ejfo9k5pf33gtz count: 2 SVG path: M47.458,15.741A50,50,0,0,1,29.636,40.271L20.819,28.135A35,35,0,0,0,33.191,11.105Z
Console.js:61 Category intellectualProperty for node card_m9ejfo9k5pf33gtz: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: intellectualProperty with items: []
Console.js:61 Skipping rendering for empty category intellectualProperty in node card_m9ejfo9k5pf33gtz
Console.js:61 Category resources for node card_m9ejfo9k5pf33gtz: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: resources with items: []
Console.js:61 Skipping rendering for empty category resources in node card_m9ejfo9k5pf33gtz
Console.js:61 Category goals for node card_m9ejfo9k5pf33gtz: {count: 1, items: Array(1), hasData: true}
Console.js:61 Rendering wedges for category: goals with items: ['Invest in scalable eco-village models; increase DAO membership.']
Console.js:61 Wedges added for node: card_m9ejfo9k5pf33gtz count: 1 SVG path: M29.142,40.629A50,50,0,0,1,-29.142,40.629L-20.325,28.494A35,35,0,0,0,20.325,28.494Z
Console.js:61 Using _valueNames for node card_m9epil53g0rtedwh: (2) ['value_food-security', 'value_local-economy']
Console.js:61 Category values for node card_m9epil53g0rtedwh: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: values with items: (2) ['value_food-security', 'value_local-economy']
Console.js:61 Wedges added for node: card_m9epil53g0rtedwh count: 2 SVG path: M0.305,-49.999A50,50,0,0,1,29.142,-40.629L20.325,-28.494A35,35,0,0,0,0.305,-34.999Z
Console.js:61 Wedges added for node: card_m9epil53g0rtedwh count: 2 SVG path: M29.636,-40.271A50,50,0,0,1,47.458,-15.741L33.191,-11.105A35,35,0,0,0,20.819,-28.135Z
Console.js:61 Using _capabilityNames for node card_m9epil53g0rtedwh: (2) ['capability_resource-sharing', 'capability_knowledge-transfer']
Console.js:61 Category capabilities for node card_m9epil53g0rtedwh: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: capabilities with items: (2) ['capability_resource-sharing', 'capability_knowledge-transfer']
Console.js:61 Wedges added for node: card_m9epil53g0rtedwh count: 2 SVG path: M47.646,-15.16A50,50,0,0,1,47.646,15.16L33.38,10.525A35,35,0,0,0,33.38,-10.525Z
Console.js:61 Wedges added for node: card_m9epil53g0rtedwh count: 2 SVG path: M47.458,15.741A50,50,0,0,1,29.636,40.271L20.819,28.135A35,35,0,0,0,33.191,11.105Z
Console.js:61 Category intellectualProperty for node card_m9epil53g0rtedwh: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: intellectualProperty with items: []
Console.js:61 Skipping rendering for empty category intellectualProperty in node card_m9epil53g0rtedwh
Console.js:61 Category resources for node card_m9epil53g0rtedwh: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: resources with items: []
Console.js:61 Skipping rendering for empty category resources in node card_m9epil53g0rtedwh
Console.js:61 Category goals for node card_m9epil53g0rtedwh: {count: 1, items: Array(1), hasData: true}
Console.js:61 Rendering wedges for category: goals with items: ['Secure 100 acres for communal use.']
Console.js:61 Wedges added for node: card_m9epil53g0rtedwh count: 1 SVG path: M29.142,40.629A50,50,0,0,1,-29.142,40.629L-20.325,28.494A35,35,0,0,0,20.325,28.494Z
Console.js:61 Using _valueNames for node card_m9epimjtsgubbspn: (2) ['value_local-economy', 'value_sustainability']
Console.js:61 Category values for node card_m9epimjtsgubbspn: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: values with items: (2) ['value_local-economy', 'value_sustainability']
Console.js:61 Wedges added for node: card_m9epimjtsgubbspn count: 2 SVG path: M0.305,-49.999A50,50,0,0,1,29.142,-40.629L20.325,-28.494A35,35,0,0,0,0.305,-34.999Z
Console.js:61 Wedges added for node: card_m9epimjtsgubbspn count: 2 SVG path: M29.636,-40.271A50,50,0,0,1,47.458,-15.741L33.191,-11.105A35,35,0,0,0,20.819,-28.135Z
Console.js:61 Using _capabilityNames for node card_m9epimjtsgubbspn: (2) ['capability_knowledge-transfer', 'capability_communication']
Console.js:61 Category capabilities for node card_m9epimjtsgubbspn: {count: 2, items: Array(2), hasData: true}
Console.js:61 Rendering wedges for category: capabilities with items: (2) ['capability_knowledge-transfer', 'capability_communication']
Console.js:61 Wedges added for node: card_m9epimjtsgubbspn count: 2 SVG path: M47.646,-15.16A50,50,0,0,1,47.646,15.16L33.38,10.525A35,35,0,0,0,33.38,-10.525Z
Console.js:61 Wedges added for node: card_m9epimjtsgubbspn count: 2 SVG path: M47.458,15.741A50,50,0,0,1,29.636,40.271L20.819,28.135A35,35,0,0,0,33.191,11.105Z
Console.js:61 Category intellectualProperty for node card_m9epimjtsgubbspn: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: intellectualProperty with items: []
Console.js:61 Skipping rendering for empty category intellectualProperty in node card_m9epimjtsgubbspn
Console.js:61 Category resources for node card_m9epimjtsgubbspn: {count: 0, items: Array(0), hasData: false}
Console.js:61 Rendering wedges for category: resources with items: []
Console.js:61 Skipping rendering for empty category resources in node card_m9epimjtsgubbspn
Console.js:61 Category goals for node card_m9epimjtsgubbspn: {count: 1, items: Array(1), hasData: true}
Console.js:61 Rendering wedges for category: goals with items: ['Support 5 local initiatives annually.']
Console.js:61 Wedges added for node: card_m9epimjtsgubbspn count: 1 SVG path: M29.142,40.629A50,50,0,0,1,-29.142,40.629L-20.325,28.494A35,35,0,0,0,20.325,28.494Z
Console.js:61 Successfully added donut rings
Console.js:61 Successfully created icon component for Luminos Funder
Console.js:61 Successfully created icon component for DAO of the Green Veil
Console.js:61 Successfully created icon component for PMA Seedkeeper
Console.js:61 Successfully created icon component for Eco-Patron Collective
Console.js:61 D3 graph initialized with utility function
Console.js:61 CRITICAL: Clearing SVG content in D3CardBoard.svelte at line 1814 - THIS REMOVES THE WEDGES!
Console.js:61 Preloading icons: (4) ['sun', 'link', 'lock', 'users']
Console.js:61 Loaded icon sun as Sun from lucide-svelte
Console.js:61 Loaded icon link as Link from lucide-svelte
Console.js:61 Loaded icon lock as Lock from lucide-svelte
Console.js:61 Loaded icon users as Users from lucide-svelte
Console.js:61 Icon store updated with: (4) ['sun', 'link', 'lock', 'users']
Console.js:61 Icons loaded, continuing with visualization
Console.js:61 Getting icon for card card_m9ej0qxdf0zko4f8 (Luminos Funder): sun
Console.js:61 Getting icon for: "sun"
Console.js:61 Normalized icon name: Sun
Console.js:61 Found icon in store: sun
Console.js:61 Getting icon for card card_m9ejfo9k5pf33gtz (DAO of the Green Veil): link
Console.js:61 Getting icon for: "link"
Console.js:61 Normalized icon name: Link
Console.js:61 Found icon in store: link
Console.js:61 Getting icon for card card_m9epil53g0rtedwh (PMA Seedkeeper): lock
Console.js:61 Getting icon for: "lock"
Console.js:61 Normalized icon name: Lock
Console.js:61 Found icon in store: lock
Console.js:61 Getting icon for card card_m9epimjtsgubbspn (Eco-Patron Collective): users
Console.js:61 Getting icon for: "users"
Console.js:61 Normalized icon name: Users
Console.js:61 Found icon in store: users
Console.js:61 Successfully created icon component for Luminos Funder
Console.js:61 Successfully rendered icon for Luminos Funder
Console.js:61 Successfully created icon component for DAO of the Green Veil
Console.js:61 Successfully rendered icon for DAO of the Green Veil
Console.js:61 Successfully created icon component for PMA Seedkeeper
Console.js:61 Successfully rendered icon for PMA Seedkeeper
Console.js:61 Successfully created icon component for Eco-Patron Collective
Console.js:61 Successfully rendered icon for Eco-Patron Collective
