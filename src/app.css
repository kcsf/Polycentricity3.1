/* src/app.css */
@import 'tailwindcss';

@import '@skeletonlabs/skeleton';
@import '@skeletonlabs/skeleton/optional/presets';
/* Use the polyc theme which supports both light and dark modes */
@import './polyc';

/* Custom styles */
:root {
  /* Game Node size variables */
  --actor-node-radius: 35px;
  --agreement-node-radius: 17px;
  --donut-thickness: 15px;

  /* Game colors */
  --node-bg-color: rgba(255, 255, 255, 0.9);
  --node-stroke: #e5e5e5;

  /* Redefine Skeleton UI variables to use a single value controlled by the dark class */
  /* Light mode defaults from polyc.css */
  --base-font-color: #4F5B53; /* From --color-surface-900 */
  --base-font-color-dark: #4F5B53; /* Set to light mode value by default */
  --heading-font-color: #5A7A67; /* From --color-secondary-950 */
  --heading-font-color-dark: #5A7A67; /* Set to light mode value by default */
  --anchor-font-color: #9C6156; /* From --color-primary-600 */
  --anchor-font-color-dark: #9C6156; /* Set to light mode value by default */
  --body-background-color: #F5F5E8; /* From --color-surface-50 */
  --body-background-color-dark: #F5F5E8; /* Set to light mode value by default */

  /* Redefine token variables */
  --color-surface-50-950: var(--color-surface-50);
  --color-surface-100-900: var(--color-surface-100);
  --color-surface-200-800: var(--color-surface-200);
  --color-surface-700-300: var(--color-surface-700);
}

html[class~="dark"] {
  /* Dark mode overrides from polyc.css */
  --base-font-color: #DDE5D6; /* From --color-surface-100 */
  --base-font-color-dark: #DDE5D6; /* Ensure it matches */
  --heading-font-color: #D6E8DE; /* From --color-secondary-50 */
  --heading-font-color-dark: #D6E8DE; /* Ensure it matches */
  --anchor-font-color: #A66A5E; /* From --color-primary-500 */
  --anchor-font-color-dark: #A66A5E; /* Ensure it matches */
  --body-background-color: #222220; /* From --color-surface-950 */
  --body-background-color-dark: #222220; /* Ensure it matches */

  /* Redefine token variables for dark mode */
  --color-surface-50-950: var(--color-surface-950);
  --color-surface-100-900: var(--color-surface-900);
  --color-surface-200-800: var(--color-surface-800);
  --color-surface-700-300: var(--color-surface-300);
}

/* Ensure color-scheme respects the dark class */
html:not([class~="dark"]) {
  color-scheme: light;
}

html[class~="dark"] {
  color-scheme: dark;
}

/* Game CSS */
.node-actor {
  cursor: pointer;
}

.node-agreement {
  cursor: pointer;
}

.link-line {
  stroke: var(--link-color);
  stroke-width: 1.5px;
}

.name-text {
  fill: var(--text-primary);
}

.name-bg {
  fill: var(--node-bg-color);
  stroke: var(--node-stroke);
  stroke-width: 1px;
}

.game-header {
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
  border-bottom: 1px solid #e5e5e5;
}

@layer components {
  /* Card glow effect */
  .card-glow {
    position: relative;
    overflow: hidden;
    transition-property: transform, box-shadow;
    transition-duration: 200ms;
    transition-timing-function: ease-in-out;
  }

  .card-glow::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: var(--theme-rounded-base);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }

  .card-glow:hover::before {
    opacity: 1;
  }
}

/* Spinner Animation */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.spinner-third {
  animation: spin 1s linear infinite;
}

/* D3.js specific styles for Polycentricity visualization
   These styles can't be converted to Tailwind because they target 
   SVG elements dynamically generated by D3.js */
.nodes circle {
  fill: var(--color-surface-100);
  stroke: var(--color-surface-300);
  stroke-width: 1px;
}

.nodes circle.active {
  stroke: var(--color-primary-500);
  stroke-width: 2px;
}

/* Links styling */
.link-obligation {
  stroke: var(--color-indigo-500);
}

.link-benefit {
  stroke: var(--color-emerald-500);
  stroke-dasharray: 4, 2;
}

/* Node styling */
.node text {
  font-family: var(--theme-font-family-base);
  fill: var(--color-surface-900);
  font-size: 0.75rem;
  text-anchor: middle;
}

/* Override for radial labels - these need to use their own text-anchor values */
.radial-label {
  text-anchor: unset !important; /* Unset to allow inline styles to take precedence */
  font-size: 10px !important; /* Force consistent font size */
}

.node-actor .actor-circle {
  fill: #fff;
  stroke: #e5e5e5;
  stroke-width: 1px;
}

.node-actor.active .actor-circle {
  stroke: #2563eb;
  stroke-width: 2px;
}

.node-agreement .agreement-circle {
  fill: #f9fafb;
  stroke: #d1d5db;
  stroke-width: 1px;
}

.node-agreement.active .agreement-circle {
  stroke: #2563eb;
  stroke-width: 2px;
}

/* Icon container styling */
.icon-container {
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible;
}

/* Segment styling for donut rings */
.segment-values {
  fill: var(--values-color, #A7C731);
}

.segment-capabilities {
  fill: var(--capabilities-color, #9BC23D);
}

.segment-goals {
  fill: var(--goals-color, #8FBC49);
}