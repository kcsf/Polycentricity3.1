/* src/app.css */
@import 'tailwindcss';

@import '@skeletonlabs/skeleton';
@import '@skeletonlabs/skeleton/optional/presets';
/* Use the fennec theme which supports both light and dark modes */
/*@import '@skeletonlabs/skeleton/themes/fennec';  */
@import './polyc';
@source '../node_modules/@skeletonlabs/skeleton-svelte/dist';

/* Custom styles */
:root {
  /* Default to light mode unless overridden */
  color-scheme: light;
  
  /* Game Node size variables */
  --actor-node-radius: 35px;
  --agreement-node-radius: 17px;
  --donut-thickness: 15px;

  /* Game colors */
  --node-bg-color: rgba(255, 255, 255, 0.9);
  --node-stroke: #e5e5e5;
}



/* Ensure color-scheme respects the toggle */
html[data-theme="fennec"][class~="dark"] {
  color-scheme: dark;
}

html[data-theme="fennec"]:not([class~="dark"]) {
  color-scheme: light;
}

/* Debug Skeleton UI variables */
:root:not([class~="dark"]) {
  --debug-light-surface-50: var(--theme-color-surface-50);
}

:root[class~="dark"] {
  --debug-dark-surface-900: var(--theme-color-surface-900);
}

/* Override Skeleton UI's prefers-color-scheme media queries */
body {
  background-color: var(--body-background-color) !important;
}

html[class~="dark"] body {
  background-color: var(--body-background-color-dark) !important;
}

/* Explicitly override heading colors for light/dark modes */
html:not([class~="dark"]) .h3,
html:not([class~="dark"]) h3 {
  color: var(--heading-font-color) !important;
}

html[class~="dark"] .h3,
html[class~="dark"] h3 {
  color: var(--heading-font-color-dark) !important;
}

/* Override any prefers-color-scheme media queries using Tailwind 4 scheme classes */
html.scheme-only-light h3,
html.scheme-only-light .h3 {
  color: var(--heading-font-color) !important;
}

html.scheme-only-dark h3,
html.scheme-only-dark .h3 {
  color: var(--heading-font-color-dark) !important;
}

/* Force Skeleton UI token backgrounds to respect scheme classes */
html.scheme-light .bg-surface-50-900-token,
html.scheme-only-light .bg-surface-50-900-token {
  background-color: var(--theme-color-surface-50) !important;
}

html.scheme-dark .bg-surface-50-900-token,
html.scheme-only-dark .bg-surface-50-900-token {
  background-color: var(--theme-color-surface-900) !important;
}

/* Force background for debugging */
html:not([class~="dark"]) {
  background-color: var(--theme-color-surface-50) !important;
}

html[class~="dark"] {
  background-color: var(--theme-color-surface-900) !important;
}

@layer components {
  /* Card glow effect */
  .card-glow {
    position: relative;
    overflow: hidden;
    transition-property: transform, box-shadow;
    transition-duration: 200ms;
    transition-timing-function: ease-in-out;
  }

  .card-glow::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: var(--theme-rounded-base);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
  }

  .card-glow:hover::before {
    opacity: 1;
  }
}

/* Spinner Animation */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.spinner-third {
  animation: spin 1s linear infinite;
}


/* OLD GAME CSS */
.node-actor {
  cursor: pointer;
}

.node-actor.active .center-circle {
}

.node-agreement {
  cursor: pointer;
}

.link-line {
  stroke: var(--link-color);
  stroke-width: 1.5px;
}

.name-text {
  fill: var(--text-primary);
}

.name-bg {
  fill: var(--node-bg-color);
  stroke: var(--node-stroke);
  stroke-width: 1px;
}

.game-header {
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
  border-bottom: 1px solid #e5e5e5;
}